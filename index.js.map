{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/tasks.js","../src/js/local-storage-api.js","../src/js/markup-tasks.js","../src/js/render-tasks.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["// для зберігання посилань на DOM елементи\n// export const themeToggle = document.getElementById('themeToggle');\n// export const body = document.body;\n// export const toggleBtn = document.querySelector(\".theme-toggle-button\");\n\n// export const form = document.querySelector(\".header-form\");\n// export const titleInput = document.getElementById('task-title');\n// export const descInput = document.getElementById('task-desc');\n\n\n// export const taskList = document.querySelector('.task-list');\n// export const deleteBtn = document.querySelector(\".task-list-item-btn\");\n\n\n// export const refs = {\n//     form,\n//     titleInput,\n//     descInput,\n//     taskList,\n//     themeToggle,\n//     body,\n//   };\n\nexport const refs = {\n  form: document.getElementById('task-form'),\n  taskList: document.getElementById('tasks-list'),\n  themeToggle: document.getElementById('themeToggle'),\n  body: document.body,\n};","// для логіки управління завданнями (створення, збереження, відображення)\n\n\n// import { form, taskList } from './refs.js';\n// import { renderTasks } from './markup-tasks.js';\n// import { localStorageApi } from './local-storage-api.js';\n\n// let tasks = [];\n\n// export function initTasks() {\n//   tasks = localStorageApi.loadTasks();\n//   renderTasks(tasks);\n// }\n\n// export function createTask(event) {\n//   event.preventDefault();\n//   const { taskName, taskDescription } = event.currentTarget.elements;\n//   const title = taskName.value.trim();\n//   const description = taskDescription.value.trim();\n\n//   if (!title || !description) return;\n\n//   const newTask = {\n//     id: Date.now().toString(),\n//     title,\n//     description\n//   };\n\n//   tasks.push(newTask);\n//   localStorageApi.saveTasks(tasks);\n//   renderTasks(tasks);\n//   event.currentTarget.reset();\n// }\n\n// export function setupDeleteListener() {\n//   taskList.addEventListener('click', e => {\n//     if (e.target.classList.contains('task-list-item-btn')) {\n//       const li = e.target.closest('li');\n//       const id = li.dataset.id;\n\n//       tasks = tasks.filter(task => task.id !== id);\n//       localStorageApi.saveTasks(tasks);\n//       renderTasks(tasks);\n//     }\n//   });\n// }\n\n\nlet tasks = [];\n\nexport function getTasks() {\n  return tasks;\n}\n\nexport function setTasks(newTasks) {\n  tasks = newTasks;\n}\n\nexport function addTask(title, description) {\n  const newTask = { id: Date.now().toString(), title, description };\n  tasks.push(newTask);\n  return newTask;\n}\n\nexport function deleteTask(id) {\n  tasks = tasks.filter(task => task.id !== id);\n}","// для збереження та завантаження завдань у локальному сховищі\n\n\n// const TASKS_KEY = 'tasks';\n// const THEME_KEY = 'theme';\n\n// export const localStorageApi = {\n//   saveTasks(tasks) {\n//     localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n//   },\n\n//   loadTasks() {\n//     const data = localStorage.getItem(TASKS_KEY);\n//     return data ? JSON.parse(data) : [];\n//   },\n\n//   saveTheme(theme) {\n//     localStorage.setItem(THEME_KEY, theme);\n//   },\n\n//   loadTheme() {\n//     return localStorage.getItem(THEME_KEY);\n//   },\n// };\n\nconst TASKS_KEY = 'tasks';\nconst THEME_KEY = 'theme';\n\nexport function saveTasks(tasks) {\n  localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\n\nexport function loadTasks() {\n  return JSON.parse(localStorage.getItem(TASKS_KEY)) || [];\n}\n\nexport function saveTheme(theme) {\n  localStorage.setItem(THEME_KEY, theme);\n}\n\nexport function loadTheme() {\n  return localStorage.getItem(THEME_KEY) || 'theme-light';\n}","// https://www.npmjs.com/package/uuid\n\n// import { taskList } from \"./refs.js\"\n\n// export const createMarkUp = ({ title, description, id }) =>\n//     `<li class=\"task-list-item\" id=${id}>\n// <button class=\"task-list-item-btn\">Delete</button>\n// <h3>${title}</h3>\n// <p>${description}</p>\n// </li>`\n\n// // export const addTask = task => taskList.insertAdjacentHTML(\"beforeend\", createMarkUp(task));\n// export const renderTasks = tasks => {\n//     taskList.innerHTML = tasks.map(createMarkUp).join('');\n//   };\n\n\nexport function createTaskMarkup({ id, title, description }) {\n    return `\n      <li class=\"task-list-item\" data-id=\"${id}\">\n       <button class=\"task-list-item-btn\">Delete</button>\n       <h3>${title}</h3>\n        <p>${description}</p>\n        \n      </li>\n    `;\n  }\n\n\n","// для роботи з DOM (додавання та видалення елементів)\n\n// import { addTask } from './markup-tasks.js';\n\n// export function renderTasks(tasks) {\n//   taskList.innerHTML = '';\n//   tasks.forEach(task => addTask(task));\n// }\n\nimport { refs } from './refs.js';\nimport { createTaskMarkup } from './markup-tasks.js';\n\nexport function renderTasks(tasks) {\n  refs.taskList.innerHTML = tasks.map(createTaskMarkup).join('');\n}\n\nexport function removeTaskFromDOM(id) {\n  const taskEl = refs.taskList.querySelector(`[data-id=\"${id}\"]`);\n  if (taskEl) taskEl.remove();\n}\n","// import { body, themeToggle } from './refs.js';\n// import { localStorageApi } from './local-storage-api.js';\n\n//   function initTheme() {\n//   const savedTheme = localStorageApi.loadTheme();\n\n//   // Якщо збережена тема є — застосовуємо її\n//   if (savedTheme === 'theme-dark') {\n//     body.classList.add('theme-dark');\n//   } else {\n//     body.classList.add('theme-light');\n//   }\n\n//   themeToggle.addEventListener('click', () => {\n//     // Перемикаємо обидва класи\n//     const darkNow = body.classList.toggle('theme-dark');\n//     body.classList.toggle('theme-light');\n\n//     // Зберігаємо тему в localStorage\n//     const newTheme = darkNow ? 'theme-dark' : 'theme-light';\n//     localStorageApi.saveTheme(newTheme);\n//   });\n// }\n\n\n// export { initTheme };\n\n\nimport { refs } from './refs.js';\nimport { saveTheme, loadTheme } from './local-storage-api.js';\n\nexport function initTheme() {\n  const savedTheme = loadTheme();\n  refs.body.className = savedTheme;\n}\n\nexport function setupThemeToggle() {\n  refs.themeToggle.addEventListener('click', () => {\n    refs.body.classList.toggle('theme-light');\n    refs.body.classList.toggle('theme-dark');\n    const currentTheme = refs.body.classList.contains('theme-light') ? 'theme-light' : 'theme-dark';\n    saveTheme(currentTheme);\n  });\n}","\n// для ініціалізації застосунку та основної логіки\n\n\n/*\n  Створи список справ.\n\nПлан на тиждень:\n Понеділок  Долучаємось на заняття з викладачем.\n Вівторок  Читаємо конспект, повторюємо пройдене.\n Середа  Практика, практика і ще раз практика! Чекаємо вас на занятті\n Четвер Виправляємо помилки та закріплюємо знання домашнім завданням.\n П’ятниця  Легке навчання: відео, подкасти, інтерактивні вправи для закріплення.\n Субота Самоперевірка та повторення.\n Неділя  Відпочиваємо та завершуємо тиждень здачею ДЗ.\n\n\n\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n// import { form } from './js/refs.js';\n// import { createTask } from './js/tasks.js';\n// form.addEventListener('submit', createTask);\n\n// import { form } from './js/refs.js';\n// import { initTasks, createTask, setupDeleteListener } from './js/tasks.js';\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   initTasks(); // Завантаження з localStorage\n//   form.addEventListener('submit', createTask); // Додавання\n//   setupDeleteListener(); // Видалення\n// });\n\n// import { initTheme } from './js/theme-switcher.js';\n// //document.addEventListener(\"DOMContentLoaded\", initTheme);\n// initTheme();\n\nimport { refs } from './js/refs.js';\nimport { addTask, deleteTask, getTasks, setTasks } from './js/tasks.js';\nimport { saveTasks, loadTasks } from './js/local-storage-api.js';\nimport { renderTasks, removeTaskFromDOM } from './js/render-tasks.js';\nimport { initTheme, setupThemeToggle } from './js/theme-switcher.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initTheme();\n  setupThemeToggle();\n\n  const savedTasks = loadTasks();\n  setTasks(savedTasks);\n  renderTasks(savedTasks);\n});\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const title = refs.form.taskName.value.trim();\n  const description = refs.form.taskDescription.value.trim();\n\n  if (!title || !description) {\n    alert('Будь ласка, заповніть обидва поля: заголовок і опис завдання.');\n    return;\n  }\n\n  const newTask = addTask(title, description);\n  renderTasks(getTasks());\n  saveTasks(getTasks());\n\n  refs.form.reset();\n});\n\nrefs.taskList.addEventListener('click', e => {\n  if (e.target.classList.contains('task-list-item-btn')) {\n    const taskId = e.target.closest('li').dataset.id;\n    deleteTask(taskId);\n    removeTaskFromDOM(taskId);\n    saveTasks(getTasks());\n  }\n});\n"],"names":["refs","tasks","getTasks","setTasks","newTasks","addTask","title","description","newTask","deleteTask","id","task","TASKS_KEY","THEME_KEY","saveTasks","loadTasks","saveTheme","theme","loadTheme","createTaskMarkup","renderTasks","removeTaskFromDOM","taskEl","initTheme","savedTheme","setupThemeToggle","currentTheme","savedTasks","taskId"],"mappings":"ssBAuBO,MAAMA,EAAO,CAClB,KAAM,SAAS,eAAe,WAAW,EACzC,SAAU,SAAS,eAAe,YAAY,EAC9C,YAAa,SAAS,eAAe,aAAa,EAClD,KAAM,SAAS,IACjB,ECoBA,IAAIC,EAAQ,CAAA,EAEL,SAASC,GAAW,CACzB,OAAOD,CACT,CAEO,SAASE,EAASC,EAAU,CACjCH,EAAQG,CACV,CAEO,SAASC,EAAQC,EAAOC,EAAa,CAC1C,MAAMC,EAAU,CAAE,GAAI,KAAK,IAAK,EAAC,SAAU,EAAE,MAAAF,EAAO,YAAAC,GACpD,OAAAN,EAAM,KAAKO,CAAO,EACXA,CACT,CAEO,SAASC,EAAWC,EAAI,CAC7BT,EAAQA,EAAM,OAAOU,GAAQA,EAAK,KAAOD,CAAE,CAC7C,CCzCA,MAAME,EAAY,QACZC,EAAY,QAEX,SAASC,EAAUb,EAAO,CAC/B,aAAa,QAAQW,EAAW,KAAK,UAAUX,CAAK,CAAC,CACvD,CAEO,SAASc,GAAY,CAC1B,OAAO,KAAK,MAAM,aAAa,QAAQH,CAAS,CAAC,GAAK,EACxD,CAEO,SAASI,EAAUC,EAAO,CAC/B,aAAa,QAAQJ,EAAWI,CAAK,CACvC,CAEO,SAASC,GAAY,CAC1B,OAAO,aAAa,QAAQL,CAAS,GAAK,aAC5C,CCzBO,SAASM,EAAiB,CAAE,GAAAT,EAAI,MAAAJ,EAAO,YAAAC,CAAW,EAAI,CACzD,MAAO;AAAA,4CACiCG,CAAE;AAAA;AAAA,aAEjCJ,CAAK;AAAA,aACLC,CAAW;AAAA;AAAA;AAAA,KAIxB,CCdO,SAASa,EAAYnB,EAAO,CACjCD,EAAK,SAAS,UAAYC,EAAM,IAAIkB,CAAgB,EAAE,KAAK,EAAE,CAC/D,CAEO,SAASE,EAAkBX,EAAI,CACpC,MAAMY,EAAStB,EAAK,SAAS,cAAc,aAAaU,CAAE,IAAI,EAC1DY,GAAQA,EAAO,QACrB,CCYO,SAASC,GAAY,CAC1B,MAAMC,EAAaN,IACnBlB,EAAK,KAAK,UAAYwB,CACxB,CAEO,SAASC,GAAmB,CACjCzB,EAAK,YAAY,iBAAiB,QAAS,IAAM,CAC/CA,EAAK,KAAK,UAAU,OAAO,aAAa,EACxCA,EAAK,KAAK,UAAU,OAAO,YAAY,EACvC,MAAM0B,EAAe1B,EAAK,KAAK,UAAU,SAAS,aAAa,EAAI,cAAgB,aACnFgB,EAAUU,CAAY,CAC1B,CAAG,CACH,CCYA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDH,IACAE,IAEA,MAAME,EAAaZ,IACnBZ,EAASwB,CAAU,EACnBP,EAAYO,CAAU,CACxB,CAAC,EAED3B,EAAK,KAAK,iBAAiB,SAAU,GAAK,CACxC,EAAE,eAAc,EAEhB,MAAMM,EAAQN,EAAK,KAAK,SAAS,MAAM,OACjCO,EAAcP,EAAK,KAAK,gBAAgB,MAAM,OAEpD,GAAI,CAACM,GAAS,CAACC,EAAa,CAC1B,MAAM,+DAA+D,EACrE,MACD,CAEeF,EAAQC,EAAOC,CAAW,EAC1Ca,EAAYlB,EAAQ,CAAE,EACtBY,EAAUZ,EAAQ,CAAE,EAEpBF,EAAK,KAAK,OACZ,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAAS,GAAK,CAC3C,GAAI,EAAE,OAAO,UAAU,SAAS,oBAAoB,EAAG,CACrD,MAAM4B,EAAS,EAAE,OAAO,QAAQ,IAAI,EAAE,QAAQ,GAC9CnB,EAAWmB,CAAM,EACjBP,EAAkBO,CAAM,EACxBd,EAAUZ,EAAQ,CAAE,CACrB,CACH,CAAC"}